name: Auto Install Terraform and Run tfsec

on:
  workflow_dispatch:

permissions:
  security-events: write
  contents: read

jobs:
  tfsec:
    name: Scan Terraform with tfsec
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Automatically install Terraform
        run: |
          TERRAFORM_VERSION="1.12.2"
          curl -sSLo terraform.zip https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
          unzip terraform.zip
          sudo mv terraform /usr/local/bin/
          terraform -version

      - name: Run terraform init (without backend)
        run: terraform init -backend=false

      - name: Install tfsec
        run: |
          curl -sSL https://raw.githubusercontent.com/aquasecurity/tfsec/master/scripts/install_linux.sh | bash
          tfsec --version

      - name: Run tfsec and generate SARIF + HTML reports
        run: |
          mkdir -p tfsec-reports
          tfsec . --format sarif --soft-fail > tfsec-reports/tfsec-results.sarif
          tfsec . --format html --soft-fail > tfsec-reports/tfsec-report.html

      - name: Upload SARIF to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: tfsec-reports/tfsec-results.sarif

      - name: Upload HTML report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfsec-html-report
          path: tfsec-reports/tfsec-report.html

  terraform_deploy:
    name: Deploy Terraform Infrastructure
    runs-on: ubuntu-latest
    needs: tfsec
    if: success()  # Only runs if tfsec job passed
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.12.2

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

      - name: Show ALB URL
        run: terraform output -raw alb_url
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
